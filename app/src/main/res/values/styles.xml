<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <!--bgColor of navigationBar.-->
        <item name="colorPrimary">@color/colorPrimary</item>
        <!--bgColor of statusBar of top-most.-->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <!--bgColor of Common Controls,such as Button and so on..-->
        <item name="colorAccent">@color/colorAccent</item>
        <!--toolbar菜单项图标的颜色-->
        <item name="android:textColorSecondary">@android:color/black</item>
    </style>
    <!--FullScreen Activity-->
    <style name="AppTheme.FullScreen">
        <item name="windowNoTitle">true</item>
        <item name="android:windowFullscreen">true</item>
    </style>
    <!--intrusiveMood Activity-->
    <style name="AppTheme.intrusiveMood" parent="AppTheme">
        <!--true半透明/false全透明-->
        <item name="android:windowTranslucentStatus">false</item>
        <item name="android:windowTranslucentNavigation">true</item>
        <item name="android:statusBarColor">@android:color/transparent</item>
    </style>
    <!--font style of main heading of the toolbar.-->
    <style name="Toolbar.TitleTextStyle" parent="@style/TextAppearance.Widget.AppCompat.Toolbar.Title">
        <item name="android:textSize">17sp</item>
        <item name="android:textColor">@color/white</item>
    </style>
    <!--font style of subHeading of the toolbar.-->
    <style name="Toolbar.SubTitleTextStyle" parent="@style/TextAppearance.Widget.AppCompat.Toolbar.Subtitle">
        <item name="android:textSize">15sp</item>
        <item name="android:textColor">@color/white</item>
    </style>
    <!-- text of size and color of toolbar. -->
    <style name="ToolbarTheme" parent="@style/ThemeOverlay.AppCompat.ActionBar">
        <!-- icon of color of the overflow menu.-->
        <item name="android:textColor">@android:color/white</item><!--effect on menu overflow text color.-->
        <item name="actionMenuTextColor">@android:color/white</item>
        <item name="colorButtonNormal">@android:color/white</item>
        <item name="colorControlNormal">@android:color/white</item><!--effect on menu overflow button color.-->
    </style>
    <!-- bgColor of popup menu of toolbar.-->
    <style name="ToolbarPopupTheme" parent="@style/ThemeOverlay.AppCompat">
        <item name="android:colorBackground">?attr/colorPrimary</item>

    </style>
    <style name="toolbar_action_menu_overflow" parent="Widget.AppCompat.Light.PopupMenu.Overflow">
        <!-- 是否覆盖锚点，为true则盖住Toolbar -->
        <item name="overlapAnchor">false</item>
        <!-- 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙 -->
        <item name="android:dropDownHorizontalOffset">-2dp</item>
        <!-- 弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar -->
        <item name="android:dropDownVerticalOffset">4dp</item>
        <!-- 弹出层背景颜色 -->
        <item name="android:colorBackground">?attr/colorPrimary</item>
        <!--字体大小-->
        <item name="android:textSize">16sp</item>
    </style>
    <!-- style of customize dialog-->
    <style name="btm_dialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowBackground">@drawable/transparent</item>
        <item name="android:background">@drawable/transparent</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowAnimationStyle">@style/dialog_anim</item>
    </style>
    <!--anim of customize dialog-->
    <style name="dialog_anim" parent="@android:style/Animation.Dialog">
        <item name="android:windowEnterAnimation">@anim/dialog_enter</item>
        <item name="android:windowExitAnimation">@anim/dialog_exit</item>
    </style>
</resources>
